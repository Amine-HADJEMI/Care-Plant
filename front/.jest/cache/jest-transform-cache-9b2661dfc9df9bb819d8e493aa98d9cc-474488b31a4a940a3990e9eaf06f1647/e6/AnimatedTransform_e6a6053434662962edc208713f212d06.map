{"version":3,"names":["_interopRequireDefault","require","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","NativeAnimatedHelper","AnimatedNode","AnimatedWithChildren","AnimatedTransform","_AnimatedWithChildren","_super","transforms","_this","_transforms","key","value","__makeNative","platformConfig","forEach","transform","__getValue","map","__getAnimatedValue","__attach","_this2","__addChild","__detach","_this3","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform","module","exports"],"sources":["AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n}\n\nmodule.exports = AnimatedTransform;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAA,IAAAC,gBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAA,IAAAE,aAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAA,IAAAG,KAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAAA,IAAAI,UAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAA,IAAAK,2BAAA,GAAAN,sBAAA,CAAAC,OAAA;AAAA,IAAAM,gBAAA,GAAAP,sBAAA,CAAAC,OAAA;AAAA,SAAAO,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAN,gBAAA,CAAAO,OAAA,EAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,OAAAT,gBAAA,CAAAO,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAd,2BAAA,CAAAQ,OAAA,QAAAC,MAAA;AAAA,SAAAJ,0BAAA,eAAAO,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAI,CAAA;AAIb,IAAMC,oBAAoB,GAAG5B,OAAO,2BAA2B;AAC/D,IAAM6B,YAAY,GAAG7B,OAAO,kBAAkB;AAC9C,IAAM8B,oBAAoB,GAAG9B,OAAO,0BAA0B;AAAC,IAEzD+B,iBAAiB,aAAAC,qBAAA;EAAA,IAAA5B,UAAA,CAAAS,OAAA,EAAAkB,iBAAA,EAAAC,qBAAA;EAAA,IAAAC,MAAA,GAAA1B,YAAA,CAAAwB,iBAAA;EAGrB,SAAAA,kBAAYG,UAAkC,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAlC,gBAAA,CAAAY,OAAA,QAAAkB,iBAAA;IAC9CI,KAAA,GAAAF,MAAA,CAAAP,IAAA;IACAS,KAAA,CAAKC,WAAW,GAAGF,UAAU;IAAC,OAAAC,KAAA;EAChC;EAAC,IAAAjC,aAAA,CAAAW,OAAA,EAAAkB,iBAAA;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAaC,cAA+B,EAAE;MAC5C,IAAI,CAACJ,WAAW,CAACK,OAAO,CAAC,UAAAC,SAAS,EAAI;QACpC,KAAK,IAAML,GAAG,IAAIK,SAAS,EAAE;UAC3B,IAAMJ,KAAK,GAAGI,SAAS,CAACL,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;YACjCS,KAAK,CAACC,YAAY,CAACC,cAAc,CAAC;UACpC;QACF;MACF,CAAC,CAAC;MACF,IAAArC,KAAA,CAAAU,OAAA,MAAAP,gBAAA,CAAAO,OAAA,EAAAkB,iBAAA,CAAAP,SAAA,yBAAAE,IAAA,OAAmBc,cAAc;IACnC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAK,WAAA,EAAqC;MACnC,OAAO,IAAI,CAACP,WAAW,CAACQ,GAAG,CAAC,UAAAF,SAAS,EAAI;QACvC,IAAM5B,MAAuB,GAAG,CAAC,CAAC;QAClC,KAAK,IAAMuB,GAAG,IAAIK,SAAS,EAAE;UAC3B,IAAMJ,KAAK,GAAGI,SAAS,CAACL,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;YACjCf,MAAM,CAACuB,GAAG,CAAC,GAAGC,KAAK,CAACK,UAAU,EAAE;UAClC,CAAC,MAAM;YACL7B,MAAM,CAACuB,GAAG,CAAC,GAAGC,KAAK;UACrB;QACF;QACA,OAAOxB,MAAM;MACf,CAAC,CAAC;IACJ;EAAC;IAAAuB,GAAA;IAAAC,KAAA,EAED,SAAAO,mBAAA,EAA6C;MAC3C,OAAO,IAAI,CAACT,WAAW,CAACQ,GAAG,CAAC,UAAAF,SAAS,EAAI;QACvC,IAAM5B,MAAuB,GAAG,CAAC,CAAC;QAClC,KAAK,IAAMuB,GAAG,IAAIK,SAAS,EAAE;UAC3B,IAAMJ,KAAK,GAAGI,SAAS,CAACL,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;YACjCf,MAAM,CAACuB,GAAG,CAAC,GAAGC,KAAK,CAACO,kBAAkB,EAAE;UAC1C,CAAC,MAAM;YAEL/B,MAAM,CAACuB,GAAG,CAAC,GAAGC,KAAK;UACrB;QACF;QACA,OAAOxB,MAAM;MACf,CAAC,CAAC;IACJ;EAAC;IAAAuB,GAAA;IAAAC,KAAA,EAED,SAAAQ,SAAA,EAAiB;MAAA,IAAAC,MAAA;MACf,IAAI,CAACX,WAAW,CAACK,OAAO,CAAC,UAAAC,SAAS,EAAI;QACpC,KAAK,IAAML,GAAG,IAAIK,SAAS,EAAE;UAC3B,IAAMJ,KAAK,GAAGI,SAAS,CAACL,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;YACjCS,KAAK,CAACU,UAAU,CAACD,MAAI,CAAC;UACxB;QACF;MACF,CAAC,CAAC;IACJ;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAW,SAAA,EAAiB;MAAA,IAAAC,MAAA;MACf,IAAI,CAACd,WAAW,CAACK,OAAO,CAAC,UAAAC,SAAS,EAAI;QACpC,KAAK,IAAML,GAAG,IAAIK,SAAS,EAAE;UAC3B,IAAMJ,KAAK,GAAGI,SAAS,CAACL,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;YACjCS,KAAK,CAACa,aAAa,CAACD,MAAI,CAAC;UAC3B;QACF;MACF,CAAC,CAAC;MACF,IAAA/C,KAAA,CAAAU,OAAA,MAAAP,gBAAA,CAAAO,OAAA,EAAAkB,iBAAA,CAAAP,SAAA,qBAAAE,IAAA;IACF;EAAC;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAc,kBAAA,EAAyB;MACvB,IAAMC,YAAY,GAAG,EAAE;MAEvB,IAAI,CAACjB,WAAW,CAACK,OAAO,CAAC,UAAAC,SAAS,EAAI;QACpC,KAAK,IAAML,GAAG,IAAIK,SAAS,EAAE;UAC3B,IAAMJ,KAAK,GAAGI,SAAS,CAACL,GAAG,CAAC;UAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;YACjCwB,YAAY,CAACC,IAAI,CAAC;cAChBC,IAAI,EAAE,UAAU;cAChBC,QAAQ,EAAEnB,GAAG;cACboB,OAAO,EAAEnB,KAAK,CAACoB,cAAc;YAC/B,CAAC,CAAC;UACJ,CAAC,MAAM;YACLL,YAAY,CAACC,IAAI,CAAC;cAChBC,IAAI,EAAE,QAAQ;cACdC,QAAQ,EAAEnB,GAAG;cACbC,KAAK,EAAEV,oBAAoB,CAAC+B,iBAAiB,CAACrB,KAAK;YACrD,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;MAEFV,oBAAoB,CAACgC,iBAAiB,CAACP,YAAY,CAAC;MACpD,OAAO;QACLE,IAAI,EAAE,WAAW;QACjBrB,UAAU,EAAEmB;MACd,CAAC;IACH;EAAC;EAAA,OAAAtB,iBAAA;AAAA,EArG6BD,oBAAoB;AAwGpD+B,MAAM,CAACC,OAAO,GAAG/B,iBAAiB"}