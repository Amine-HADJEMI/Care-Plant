5c19a83b7a920b62365a84f673d0ef4a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Login = _interopRequireDefault(require("../src/components/Login"));
var _reactTestRenderer = require("react-test-renderer");
var _jsxRuntime = require("react/jsx-runtime");
describe('Login component', function () {
  test('renders login form', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Login.default, {})),
      getByTestId = _render.getByTestId;
    var loginForm = getByTestId('login-form');
    expect(loginForm).toBeDefined();
  });
  test('submits login form', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Login.default, {})),
      getByTestId = _render2.getByTestId;
    var emailInput = getByTestId('email-input');
    var passwordInput = getByTestId('password-input');
    var submitButton = getByTestId('submit-button');
    emailInput.props.onChangeText('test@example.com');
    passwordInput.props.onChangeText('password123');
    submitButton.props.onPress();
  });
});
test('renders login form', function () {
  var tree = (0, _reactTestRenderer.create)((0, _jsxRuntime.jsx)(_Login.default, {}));
  var form = tree.root.findByProps({
    testID: 'login-form'
  });
  expect(form).toBeDefined();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Mb2dpbiIsIl9yZWFjdFRlc3RSZW5kZXJlciIsIl9qc3hSdW50aW1lIiwiZGVzY3JpYmUiLCJ0ZXN0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJnZXRCeVRlc3RJZCIsImxvZ2luRm9ybSIsImV4cGVjdCIsInRvQmVEZWZpbmVkIiwiX3JlbmRlcjIiLCJlbWFpbElucHV0IiwicGFzc3dvcmRJbnB1dCIsInN1Ym1pdEJ1dHRvbiIsInByb3BzIiwib25DaGFuZ2VUZXh0Iiwib25QcmVzcyIsInRyZWUiLCJjcmVhdGUiLCJmb3JtIiwicm9vdCIsImZpbmRCeVByb3BzIiwidGVzdElEIl0sInNvdXJjZXMiOlsiYXBwLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgTG9naW4gZnJvbSAnLi4vc3JjL2NvbXBvbmVudHMvTG9naW4nO1xyXG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcclxuXHJcbmRlc2NyaWJlKCdMb2dpbiBjb21wb25lbnQnLCAoKSA9PiB7XHJcbiAgdGVzdCgncmVuZGVycyBsb2dpbiBmb3JtJywgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKDxMb2dpbiAvPik7XHJcbiAgICBjb25zdCBsb2dpbkZvcm0gPSBnZXRCeVRlc3RJZCgnbG9naW4tZm9ybScpO1xyXG4gICAgZXhwZWN0KGxvZ2luRm9ybSkudG9CZURlZmluZWQoKTtcclxuICB9KTtcclxuXHJcbiAgdGVzdCgnc3VibWl0cyBsb2dpbiBmb3JtJywgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKDxMb2dpbiAvPik7XHJcbiAgICBjb25zdCBlbWFpbElucHV0ID0gZ2V0QnlUZXN0SWQoJ2VtYWlsLWlucHV0Jyk7XHJcbiAgICBjb25zdCBwYXNzd29yZElucHV0ID0gZ2V0QnlUZXN0SWQoJ3Bhc3N3b3JkLWlucHV0Jyk7XHJcbiAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBnZXRCeVRlc3RJZCgnc3VibWl0LWJ1dHRvbicpO1xyXG5cclxuICAgIGVtYWlsSW5wdXQucHJvcHMub25DaGFuZ2VUZXh0KCd0ZXN0QGV4YW1wbGUuY29tJyk7XHJcbiAgICBwYXNzd29yZElucHV0LnByb3BzLm9uQ2hhbmdlVGV4dCgncGFzc3dvcmQxMjMnKTtcclxuICAgIHN1Ym1pdEJ1dHRvbi5wcm9wcy5vblByZXNzKCk7XHJcblxyXG4gICAgLy8gZXhwZWN0IGxvZ2luIHRvIGJlIHN1Y2Nlc3NmdWwsIGUuZy4gbmF2aWdhdGUgdG8gSG9tZSBzY3JlZW5cclxuICB9KTtcclxuXHJcbn0pO1xyXG5cclxuXHJcblxyXG50ZXN0KCdyZW5kZXJzIGxvZ2luIGZvcm0nLCAoKSA9PiB7XHJcbiAgY29uc3QgdHJlZSA9IGNyZWF0ZSg8TG9naW4gLz4pO1xyXG4gIGNvbnN0IGZvcm0gPSB0cmVlLnJvb3QuZmluZEJ5UHJvcHMoeyB0ZXN0SUQ6ICdsb2dpbi1mb3JtJyB9KTtcclxuICBleHBlY3QoZm9ybSkudG9CZURlZmluZWQoKTtcclxufSk7XHJcblxyXG4iXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE1BQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLGtCQUFBLEdBQUFILE9BQUE7QUFBNkMsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBRTdDSyxRQUFRLENBQUMsaUJBQWlCLEVBQUUsWUFBTTtFQUNoQ0MsSUFBSSxDQUFDLG9CQUFvQixFQUFFLFlBQU07SUFDL0IsSUFBQUMsT0FBQSxHQUF3QixJQUFBQyxtQkFBTSxFQUFDLElBQUFKLFdBQUEsQ0FBQUssR0FBQSxFQUFDUCxNQUFBLENBQUFRLE9BQUssS0FBRyxDQUFDO01BQWpDQyxXQUFXLEdBQUFKLE9BQUEsQ0FBWEksV0FBVztJQUNuQixJQUFNQyxTQUFTLEdBQUdELFdBQVcsQ0FBQyxZQUFZLENBQUM7SUFDM0NFLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDLENBQUNFLFdBQVcsRUFBRTtFQUNqQyxDQUFDLENBQUM7RUFFRlIsSUFBSSxDQUFDLG9CQUFvQixFQUFFLFlBQU07SUFDL0IsSUFBQVMsUUFBQSxHQUF3QixJQUFBUCxtQkFBTSxFQUFDLElBQUFKLFdBQUEsQ0FBQUssR0FBQSxFQUFDUCxNQUFBLENBQUFRLE9BQUssS0FBRyxDQUFDO01BQWpDQyxXQUFXLEdBQUFJLFFBQUEsQ0FBWEosV0FBVztJQUNuQixJQUFNSyxVQUFVLEdBQUdMLFdBQVcsQ0FBQyxhQUFhLENBQUM7SUFDN0MsSUFBTU0sYUFBYSxHQUFHTixXQUFXLENBQUMsZ0JBQWdCLENBQUM7SUFDbkQsSUFBTU8sWUFBWSxHQUFHUCxXQUFXLENBQUMsZUFBZSxDQUFDO0lBRWpESyxVQUFVLENBQUNHLEtBQUssQ0FBQ0MsWUFBWSxDQUFDLGtCQUFrQixDQUFDO0lBQ2pESCxhQUFhLENBQUNFLEtBQUssQ0FBQ0MsWUFBWSxDQUFDLGFBQWEsQ0FBQztJQUMvQ0YsWUFBWSxDQUFDQyxLQUFLLENBQUNFLE9BQU8sRUFBRTtFQUc5QixDQUFDLENBQUM7QUFFSixDQUFDLENBQUM7QUFJRmYsSUFBSSxDQUFDLG9CQUFvQixFQUFFLFlBQU07RUFDL0IsSUFBTWdCLElBQUksR0FBRyxJQUFBQyx5QkFBTSxFQUFDLElBQUFuQixXQUFBLENBQUFLLEdBQUEsRUFBQ1AsTUFBQSxDQUFBUSxPQUFLLEtBQUcsQ0FBQztFQUM5QixJQUFNYyxJQUFJLEdBQUdGLElBQUksQ0FBQ0csSUFBSSxDQUFDQyxXQUFXLENBQUM7SUFBRUMsTUFBTSxFQUFFO0VBQWEsQ0FBQyxDQUFDO0VBQzVEZCxNQUFNLENBQUNXLElBQUksQ0FBQyxDQUFDVixXQUFXLEVBQUU7QUFDNUIsQ0FBQyxDQUFDIn0=