a19b9560870e58dc91fa1ddc467c1b99
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var nativeTag = 1;
module.exports = function (viewName) {
  var Component = function (_React$Component) {
    (0, _inherits2.default)(Component, _React$Component);
    var _super = _createSuper(Component);
    function Component() {
      var _this;
      (0, _classCallCheck2.default)(this, Component);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _this._nativeTag = nativeTag++;
      _this.blur = jest.fn();
      _this.focus = jest.fn();
      _this.measure = jest.fn();
      _this.measureInWindow = jest.fn();
      _this.measureLayout = jest.fn();
      _this.setNativeProps = jest.fn();
      return _this;
    }
    (0, _createClass2.default)(Component, [{
      key: "render",
      value: function render() {
        return React.createElement(viewName, this.props, this.props.children);
      }
    }]);
    return Component;
  }(React.Component);
  if (viewName === 'RCTView') {
    Component.displayName = 'View';
  } else {
    Component.displayName = viewName;
  }
  return Component;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJfY3JlYXRlU3VwZXIiLCJEZXJpdmVkIiwiaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY3JlYXRlU3VwZXJJbnRlcm5hbCIsIlN1cGVyIiwiZGVmYXVsdCIsInJlc3VsdCIsIk5ld1RhcmdldCIsImNvbnN0cnVjdG9yIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFyZ3VtZW50cyIsImFwcGx5Iiwic2hhbSIsIlByb3h5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiZSIsIlJlYWN0IiwibmF0aXZlVGFnIiwibW9kdWxlIiwiZXhwb3J0cyIsInZpZXdOYW1lIiwiQ29tcG9uZW50IiwiX1JlYWN0JENvbXBvbmVudCIsIl9zdXBlciIsIl90aGlzIiwiX2xlbiIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjb25jYXQiLCJfbmF0aXZlVGFnIiwiYmx1ciIsImplc3QiLCJmbiIsImZvY3VzIiwibWVhc3VyZSIsIm1lYXN1cmVJbldpbmRvdyIsIm1lYXN1cmVMYXlvdXQiLCJzZXROYXRpdmVQcm9wcyIsImtleSIsInZhbHVlIiwicmVuZGVyIiwiY3JlYXRlRWxlbWVudCIsInByb3BzIiwiY2hpbGRyZW4iLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbIm1vY2tOYXRpdmVDb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxubGV0IG5hdGl2ZVRhZyA9IDE7XG5cbm1vZHVsZS5leHBvcnRzID0gdmlld05hbWUgPT4ge1xuICBjb25zdCBDb21wb25lbnQgPSBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgX25hdGl2ZVRhZyA9IG5hdGl2ZVRhZysrO1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQodmlld05hbWUsIHRoaXMucHJvcHMsIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cblxuICAgIC8vIFRoZSBtZXRob2RzIHRoYXQgZXhpc3Qgb24gaG9zdCBjb21wb25lbnRzXG4gICAgYmx1ciA9IGplc3QuZm4oKTtcbiAgICBmb2N1cyA9IGplc3QuZm4oKTtcbiAgICBtZWFzdXJlID0gamVzdC5mbigpO1xuICAgIG1lYXN1cmVJbldpbmRvdyA9IGplc3QuZm4oKTtcbiAgICBtZWFzdXJlTGF5b3V0ID0gamVzdC5mbigpO1xuICAgIHNldE5hdGl2ZVByb3BzID0gamVzdC5mbigpO1xuICB9O1xuXG4gIGlmICh2aWV3TmFtZSA9PT0gJ1JDVFZpZXcnKSB7XG4gICAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gJ1ZpZXcnO1xuICB9IGVsc2Uge1xuICAgIENvbXBvbmVudC5kaXNwbGF5TmFtZSA9IHZpZXdOYW1lO1xuICB9XG5cbiAgcmV0dXJuIENvbXBvbmVudDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQVNBLFlBQVk7O0FBQUMsSUFBQUEsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGdCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBRSxhQUFBLEdBQUFILHNCQUFB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