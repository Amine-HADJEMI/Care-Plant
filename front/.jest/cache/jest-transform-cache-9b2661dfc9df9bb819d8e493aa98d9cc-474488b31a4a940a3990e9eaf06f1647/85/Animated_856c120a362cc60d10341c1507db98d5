5e9bd1d2bd39d0b506dd349dc3bad43a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _Platform = _interopRequireDefault(require("../Utilities/Platform"));
var AnimatedMock = _interopRequireWildcard(require("./AnimatedMock"));
var AnimatedImplementation = _interopRequireWildcard(require("./AnimatedImplementation"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Animated = _Platform.default.isTesting ? AnimatedMock : AnimatedImplementation;
module.exports = _objectSpread({
  get FlatList() {
    return require("./components/AnimatedFlatList");
  },
  get Image() {
    return require("./components/AnimatedImage");
  },
  get ScrollView() {
    return require("./components/AnimatedScrollView");
  },
  get SectionList() {
    return require("./components/AnimatedSectionList");
  },
  get Text() {
    return require("./components/AnimatedText");
  },
  get View() {
    return require("./components/AnimatedView");
  }
}, Animated);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfUGxhdGZvcm0iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIkFuaW1hdGVkTW9jayIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiQW5pbWF0ZWRJbXBsZW1lbnRhdGlvbiIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJvd25LZXlzIiwib2JqZWN0IiwiZW51bWVyYWJsZU9ubHkiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwic3ltYm9scyIsImZpbHRlciIsInN5bSIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImZvckVhY2giLCJfZGVmaW5lUHJvcGVydHkyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJBbmltYXRlZCIsIlBsYXRmb3JtIiwiaXNUZXN0aW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsIkZsYXRMaXN0IiwiSW1hZ2UiLCJTY3JvbGxWaWV3IiwiU2VjdGlvbkxpc3QiLCJUZXh0IiwiVmlldyJdLCJzb3VyY2VzIjpbIkFuaW1hdGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCBQbGF0Zm9ybSBmcm9tICcuLi9VdGlsaXRpZXMvUGxhdGZvcm0nO1xuaW1wb3J0IHR5cGVvZiBBbmltYXRlZEZsYXRMaXN0IGZyb20gJy4vY29tcG9uZW50cy9BbmltYXRlZEZsYXRMaXN0JztcbmltcG9ydCB0eXBlb2YgQW5pbWF0ZWRJbWFnZSBmcm9tICcuL2NvbXBvbmVudHMvQW5pbWF0ZWRJbWFnZSc7XG5pbXBvcnQgdHlwZW9mIEFuaW1hdGVkU2Nyb2xsVmlldyBmcm9tICcuL2NvbXBvbmVudHMvQW5pbWF0ZWRTY3JvbGxWaWV3JztcbmltcG9ydCB0eXBlb2YgQW5pbWF0ZWRTZWN0aW9uTGlzdCBmcm9tICcuL2NvbXBvbmVudHMvQW5pbWF0ZWRTZWN0aW9uTGlzdCc7XG5pbXBvcnQgdHlwZW9mIEFuaW1hdGVkVGV4dCBmcm9tICcuL2NvbXBvbmVudHMvQW5pbWF0ZWRUZXh0JztcbmltcG9ydCB0eXBlb2YgQW5pbWF0ZWRWaWV3IGZyb20gJy4vY29tcG9uZW50cy9BbmltYXRlZFZpZXcnO1xuXG5pbXBvcnQgKiBhcyBBbmltYXRlZE1vY2sgZnJvbSAnLi9BbmltYXRlZE1vY2snO1xuaW1wb3J0ICogYXMgQW5pbWF0ZWRJbXBsZW1lbnRhdGlvbiBmcm9tICcuL0FuaW1hdGVkSW1wbGVtZW50YXRpb24nO1xuXG5jb25zdCBBbmltYXRlZCA9ICgoUGxhdGZvcm0uaXNUZXN0aW5nXG4gID8gQW5pbWF0ZWRNb2NrXG4gIDogQW5pbWF0ZWRJbXBsZW1lbnRhdGlvbik6IHR5cGVvZiBBbmltYXRlZE1vY2spO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0IEZsYXRMaXN0KCk6IEFuaW1hdGVkRmxhdExpc3Qge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2NvbXBvbmVudHMvQW5pbWF0ZWRGbGF0TGlzdCcpO1xuICB9LFxuICBnZXQgSW1hZ2UoKTogQW5pbWF0ZWRJbWFnZSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZEltYWdlJyk7XG4gIH0sXG4gIGdldCBTY3JvbGxWaWV3KCk6IEFuaW1hdGVkU2Nyb2xsVmlldyB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFNjcm9sbFZpZXcnKTtcbiAgfSxcbiAgZ2V0IFNlY3Rpb25MaXN0KCk6IEFuaW1hdGVkU2VjdGlvbkxpc3Qge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2NvbXBvbmVudHMvQW5pbWF0ZWRTZWN0aW9uTGlzdCcpO1xuICB9LFxuICBnZXQgVGV4dCgpOiBBbmltYXRlZFRleHQge1xuICAgIHJldHVybiByZXF1aXJlKCcuL2NvbXBvbmVudHMvQW5pbWF0ZWRUZXh0Jyk7XG4gIH0sXG4gIGdldCBWaWV3KCk6IEFuaW1hdGVkVmlldyB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFZpZXcnKTtcbiAgfSxcbiAgLi4uQW5pbWF0ZWQsXG59O1xuIl0sIm1hcHBpbmdzIjoiOztBQVVBLElBQUFBLFNBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQVFBLElBQUFDLFlBQUEsR0FBQUMsdUJBQUEsQ0FBQUYsT0FBQTtBQUNBLElBQUFHLHNCQUFBLEdBQUFELHVCQUFBLENBQUFGLE9BQUE7QUFBbUUsU0FBQUkseUJBQUFDLFdBQUEsZUFBQUMsT0FBQSxrQ0FBQUMsaUJBQUEsT0FBQUQsT0FBQSxRQUFBRSxnQkFBQSxPQUFBRixPQUFBLFlBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBLFdBQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUEsS0FBQUYsV0FBQTtBQUFBLFNBQUFILHdCQUFBTyxHQUFBLEVBQUFKLFdBQUEsU0FBQUEsV0FBQSxJQUFBSSxHQUFB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