{"version":3,"names":["_Platform","_interopRequireDefault","require","PressabilityDebug","_interopRequireWildcard","_usePressability","_StyleSheet","_processColor","_TextAncestor","_TextNativeComponent","React","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","Text","forwardRef","props","forwardedRef","_props$accessibilityS","_props$accessibilityS2","accessible","allowFontScaling","ellipsizeMode","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","suppressHighlighting","restProps","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","isHighlighted","setHighlighted","_disabled","disabled","accessibilityState","_accessibilityState","isPressable","initialized","useLazyInitialization","config","useMemo","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","usePressability","eventHandlersForText","onClick","selectionColor","processColor","style","__DEV__","isEnabled","StyleSheet","compose","color","numberOfLines","console","error","hasTextAncestor","useContext","TextAncestor","_accessible","Platform","select","ios","jsx","NativeVirtualText","ref","Provider","value","children","NativeText","displayName","newValue","_useState3","_useState4","oldValue","setValue","module","exports"],"sources":["Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nimport Platform from '../Utilities/Platform';\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport processColor from '../StyleSheet/processColor';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport {type TextProps} from './TextProps';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    allowFontScaling,\n    ellipsizeMode,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : props.accessibilityState?.disabled;\n  const _accessibilityState =\n    _disabled !== props.accessibilityState?.disabled\n      ? {...props.accessibilityState, disabled: _disabled}\n      : props.accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta',\n      });\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      {...eventHandlersForText}\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      numberOfLines={numberOfLines}\n      selectionColor={selectionColor}\n      style={style}\n      ref={forwardedRef}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        disabled={_disabled}\n        accessible={_accessible}\n        accessibilityState={_accessibilityState}\n        allowFontScaling={allowFontScaling !== false}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        numberOfLines={numberOfLines}\n        selectionColor={selectionColor}\n        style={style}\n        ref={forwardedRef}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nmodule.exports = Text;\n"],"mappings":"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"}